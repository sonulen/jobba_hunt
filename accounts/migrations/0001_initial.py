# Generated by Django 3.0.4 on 2020-04-12 13:19

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('jobs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('surname', models.CharField(max_length=64)),
                ('status', models.CharField(choices=[('EMPTY', 'Не указано'), ('NLF', 'Не ищу работу'), ('CO', 'Рассматриваю предложения'), ('LK', 'Ищу работу')], default='EMPTY', max_length=24)),
                ('salary', models.PositiveIntegerField()),
                ('grade', models.CharField(choices=[('EMPTY', 'Не указано'), ('TR', 'Стажер'), ('JUN', 'Джуниор'), ('MDL', 'Миддл'), ('SNR', 'Синьор'), ('LD', 'Лид')], default='EMPTY', max_length=24)),
                ('education', models.CharField(max_length=128)),
                ('experience', models.CharField(max_length=256)),
                ('portfolio', models.CharField(max_length=256)),
                ('specialty', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resumes', to='jobs.Specialty')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('company', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='jobs.Company')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('resume', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='accounts.Resume')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
